					INICIO DO LEIA-ME
			  Trabalho de Arquitetura de Computadores I.

				Curso: Sistemas de Informação
				Nome do Professor: Kleber Kruger
				Nome do Aluno: Rafael Viana

Como trabalho avaliativo foi desenvolvido um programa em Assembly Mibs para ordenação de um vetor
	Onde lê um vetor N e depois ordena-lo e imprimir com o numero de trocas realizadas por aquele algoritmo escolhido, os algoritmos implementados são Bubble Sort, Insert Sort, Select Sort e Merge Sort.

Como Funciona ?!:

Esse código é utilizado pelo simulador Mars que foi construido pela Missouri State University.

Composição dos Metodos!

Ele é composto por dois Menus sendo eles: Um menu primario "Menu" e um submenu contendo os tipos de ordenações "Menu Ordenação":

Menu:

No primeiro menu temos 4 opções sendo elas :

'1' Criar Novo Vetor : (Cria um novo vetor, caso exista algum vetor em memória ele é apagado).

'2' Ver Vetor : (Imprimi o vetor salvo na memória pode ser que ele esteja ordenado ou não).

'3' Ordenar Vetor : (Este é um submenu que contém os métodos de ordenação).

'0' Sair: (Chamada para sair/finalizar o programa).


Menu Ordenação:

No Submenu Ordenação temos 4 opções sendo elas: 

'1' Bubble Sort : (Ordena Utilizando a lógica Buuble Sort e imprimi quantidade de Trocas)

'2' Insert Sort : (Ordena Utilizando a lógica Insert Sort e imprimi quantidade de Trocas)

'3' Select Sort : (Ordena Utilizando a lógica Select Sort e imprimi quantidade de Trocas)

'4' Meger Sort : (Ordena Utilizando a lógica Merge Sort e imprimi quantidade de Trocas)


Obs: Após a ordenação você é lançado para o Primeiro Menu onde deve aperta "2" para imprimir o vetor ordenado.

Composição básica dos Métodos:

1ª Criar Vetor -> prepara_criar_vetor -> inicio_criar_vetor

2ª Imprimir Vetor -> prepara_imprimi_vetor-> inicio_impimi_vetor

3ª BubbleSort -> inicia_ordena_bubblesort -> primeiro_for_bubble -> segundo_for_bubble -> sub_primeiro_for_bubble -> if -> troca-> imprimi_troca

4ª InsertSort -> inicia_ordena_insertsort -> primeiro_for_insert -> segundo_for_insert -> soma_primeiro_for_insert -> sub_segundo_for_insert -> if -> troca -> imprimi_troca

5ª SelectSort -> inicia_ordena_selectsort -> primeiro_for_select -> segundo_for_select -> soma_primeiro_for_select -> soma_segundo_for_select -> if_select -> troca_select -> imprimi_troca
  

Pontos Positivos e Pontos Negativos:

Pontos positivos: A utilização de um código de montagem ajuda a compreender melhor o funcionamento por trás do compilador, forçando um melhor raciocínio lógico.

Pontos Negativos: Difícil e longa codificação das classes e métodos.   
	
					FIM DO LEIA-ME
